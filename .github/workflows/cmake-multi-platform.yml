name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        cpp_compiler: [g++, clang++, cl]
        enable_security: [ON, OFF]

        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

        exclude:
          - os: windows-latest
            cpp_compiler: g++
          - os: windows-latest
            cpp_compiler: clang++
          - os: ubuntu-latest
            cpp_compiler: cl

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set build output directory
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build-${{ matrix.cpp_compiler }}-${{ matrix.enable_security }}" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -S ${{ github.workspace }}
          -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Run main
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./Release/main.exe
          else
            ./main
          fi
        shell: bash
